--1
--PR_DIVIDE 12,0
ALTER PROCEDURE PR_DIVIDE
	@A	INT,
	@B	INT
AS
BEGIN
	BEGIN TRY
	DECLARE @C INT
		SET @C=@A/@B;
	END TRY
	BEGIN CATCH
		PRINT 'DIVIDE BY ZERO ERROR ENCOUNTERD'
	END CATCH
END


--2
BEGIN TRY
	DECLARE @DATE_TIME VARCHAR(100)='10/16/2015 21:02:04'
	SELECT CONVERT(DATETIME,@DATE_TIME,5) AS CONVERTION
END TRY
BEGIN CATCH
	SELECT ERROR_MESSAGE() AS ERROR_MSG;
END CATCH


--3
--PR_INSERT 1,'JENIL'
CREATE PROCEDURE PR_INSERT
	@PLOGID			INT,
	@PERSONNAME		VARCHAR(250)
AS
BEGIN
	BEGIN TRY
		INSERT INTO PERSON_LOG VALUES(@PLOGID,@PERSONNAME,'INSERTED',GETDATE())
	END TRY
	BEGIN CATCH
		PRINT 'THE PLOGID IS ALREADY TAKEN. TRY ANOTHER ONE'
	END CATCH
END


--4

DECLARE @R INT
EXEC PR_SUM 'AB',2,@R OUT
PRINT @R

ALTER PROCEDURE PR_SUM
	@A VARCHAR(5),
	@B	INT,
	@ANS INT OUT

AS
BEGIN

	BEGIN TRY
		SET @ANS= @A+@B;
	END TRY
	BEGIN CATCH
		SELECT	ERROR_LINE() AS [ERROR LINE],
				ERROR_NUMBER() AS [ERRROR NUMBER],
				ERROR_PROCEDURE() AS [ERROR PROCEDURE],
				ERROR_SEVERITY() AS [ERROR SEVERITY],
				ERROR_STATE() AS [ERROR STATE],
				ERROR_MESSAGE() AS [ERROR MSG]
	END CATCH
END



--5
--PR_SELECT 5
ALTER PROCEDURE PR_SELECT
@PLOGID		INT
AS
BEGIN
	    
		IF EXISTS(SELECT * FROM PERSON_LOG WHERE PLOGID=@PLOGID)
			PRINT 'PLOG ID IS AVILABLE'
        ELSE          
		THROW 56700,'PLOG ID NOT AVILABLE',1
	
END


--6
DECLARE
@PLOGID			INT,
@PERSONNAME		VARCHAR(250);
DECLARE PER_CURSOR CURSOR
FOR SELECT
		PLOGID,
		PERSONNAME
	FROM
		PERSON_LOG
OPEN PER_CURSOR;
FETCH NEXT FROM PER_CURSOR INTO
	@PLOGID,
	@PERSONNAME;
WHILE @@FETCH_STATUS=0
	BEGIN
		PRINT CAST(@PLOGID AS VARCHAR(10)) +'-'+@PERSONNAME;
		FETCH NEXT FROM PER_CURSOR INTO
		@PLOGID,
		@PERSONNAME;
	END
CLOSE PER_CURSOR
DEALLOCATE PER_CURSOR


--7
SELECT * FROM STUDENT

DECLARE
@BRANCH		varchar(50),
@RNO		INT;
DECLARE	STU_CURSOR CURSOR
FOR SELECT
		BRANCH,
		RNO
	FROM
		STUDENT;
OPEN STU_CURSOR
FETCH NEXT FROM STU_CURSOR INTO 
	@BRANCH,
	@RNO
WHILE @@FETCH_STATUS=0
	BEGIN
		UPDATE STUDENT SET ENROLLMENTNO='SOE'+'22'+@BRANCH+CAST(@RNO AS VARCHAR) WHERE RNO=@RNO
		FETCH NEXT FROM STU_CURSOR INTO 
		@BRANCH,
		@RNO
	END
CLOSE STU_CURSOR
DEALLOCATE STU_CURSOR