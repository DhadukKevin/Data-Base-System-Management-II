CREATE DATABASE PERSON_INFO_KEVIN

UPDATE PERSON SET PERSONNAME='KEVIN' WHERE PERSONID=1
DELETE FROM PERSON WHERE PERSONID=2
SELECT * FROM PERSON


--1

--PR_PERSON_INSERT 1,'KEVIN',25000,'2022-01-01','RAJKOT','19','2004-01-06'
--PR_PERSON_INSERT 2,'NEVIL',22000,'2022-02-02','RAJKOT','19','2005-02-06'
--PR_PERSON_INSERT 3,'JENIL',20000,'2022-03-03','RAJKOT','19','2006-03-06'
--SELECT * FROM PERSON

ALTER PROCEDURE PR_PERSON_INSERT
@PERSONID		INT,
@PERSONNAME		VARCHAR(50),
@SALARY			DECIMAL(8,2),
@JOININGDATE	DATETIME,
@CITY			VARCHAR(50),
@AGE			INT,
@BIRTHDATE		DATETIME

AS
BEGIN
	
	INSERT INTO PERSON VALUES(@PERSONID,@PERSONNAME,@SALARY,@JOININGDATE,@CITY,@AGE,@BIRTHDATE)

END

--PR_PERSON_UPDATE 2,'JENIL',22000,'2022-02-02','RAJKOT','19','2005-02-06'
--PR_PERSON_UPDATE 2,'JENIL',19000,'2022-03-03','RAJKOT','16','2006-03-06'
ALTER PROCEDURE PR_PERSON_UPDATE
@PERSONID		INT,
@PERSONNAME		VARCHAR(50),
@SALARY			DECIMAL(8,2),
@JOININGDATE	DATETIME,
@CITY			VARCHAR(50),
@AGE			INT,
@BIRTHDATE		DATETIME

AS
BEGIN
	
	UPDATE PERSON SET PERSONNAME=@PERSONNAME,SALARY=@SALARY,JOININGDATE=@JOININGDATE,CITY=@CITY,AGE=@AGE,BIRTHDATE=@BIRTHDATE
	WHERE PERSONID=@PERSONID
END


--PR_PERSON_DELETE 2
CREATE PROCEDURE PR_PERSON_DELETE
@PERSONID	INT

AS
BEGIN

	DELETE FROM PERSON WHERE PERSONID=@PERSONID
END




--2

SELECT * FROM PERSONLOG


CREATE TRIGGER TR_PERSON_INSERT
ON PERSON
AFTER INSERT

AS
BEGIN 
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM inserted
	SELECT @PERSONNAME=PERSONNAME FROM inserted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSERTED',GETDATE())

END



CREATE TRIGGER TR_PERSON_UPDATE
ON PERSON
AFTER UPDATE

AS
BEGIN 
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM inserted
	SELECT @PERSONNAME=PERSONNAME FROM inserted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'UPDATED',GETDATE())

END


CREATE TRIGGER TR_PERSON_DLT
ON PERSON
AFTER DELETE

AS
BEGIN 
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM deleted
	SELECT @PERSONNAME=PERSONNAME FROM deleted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'DELETED',GETDATE())

END

DROP TRIGGER TR_PERSON_INSERT
DROP TRIGGER TR_PERSON_UPDATE
DROP TRIGGER TR_PERSON_DLT




--3

CREATE TRIGGER TR_PERSON_INSTEDOF_INSERT
ON PERSON
INSTEAD OF INSERT

AS
BEGIN 
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM inserted
	SELECT @PERSONNAME=PERSONNAME FROM inserted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSERTED',GETDATE())

END

ALTER TRIGGER TR_PERSON_INSTEDOF_UPDATE
ON PERSON
INSTEAD OF UPDATE

AS
BEGIN 
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM inserted
	SELECT @PERSONNAME=PERSONNAME FROM inserted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'UPDATE',GETDATE())

END

ALTER TRIGGER PR_PERSON_INSTEADOF_DLT
ON PERSON
INSTEAD OF DELETE

AS
BEGIN
	DECLARE @PERSONID	INT,
			@PERSONNAME	VARCHAR(50)
	SELECT @PERSONID=PERSONID FROM deleted
	SELECT @PERSONNAME=PERSONNAME FROM deleted

	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'DELETED',GETDATE())

END



--4

--DELETE FROM PERSONLOG WHERE PERSONID=3

CREATE TRIGGER PR_PRESONLOG_DELETE
ON PERSONLOG
FOR DELETE
AS
BEGIN
	PRINT('RECORD DELETED SUCCESSFULLY FROM PERSONLOG')
END


--5
CREATE TRIGGER TR_PERSON_DATE_INSERT
ON PERSON
FOR INSERT

AS
BEGIN 
	DECLARE @DATE	DATETIME,@AGE	INT
	SELECT @DATE=BIRTHDATE FROM inserted

	SET @AGE=DATEDIFF(YEAR,@DATE,GETDATE())

	INSERT INTO PERSON (AGE) VALUES(@AGE)
END